clc; clear; close all;
format long;

plots = initializePlots();

linkage = Linkage(plots);
% linkage.analyzeStatics()
linkage.analyzeDynamics()

function plots = initializePlots()
    plotLabels = struct('jointLinPos', {["Joint X Coordinate for Single Crank Revolution",...
                                         "Joint Y Coordinate for Single Crank Revolution",...
                                         "Joint Linear Position for Single Crank Revolution"]},...
                        'jointLinVelX', {["Crank Angle (degrees)",...
                                          "Velocity (m/s)",...
                                          "Joint Linear Velocity in x-Direction vs. Crank Angle"]},...
                        'jointLinVelY', {["Crank Angle (degrees)",...
                                          "Velocity (m/s)",...
                                          "Joint Linear Velocity in y-Direction vs. Crank Angle"]},...
                        'jointLinAccel', {["Crank Angle (degrees)",...
                                           "Acceleration (m/s^2)",...
                                           "Joint Linear Acceleration vs. Crank Angle"]},...
                        'linkAngVel', {["Crank Angle (degrees)",...
                                        "Angular Velocity (rad/s)",...
                                        "Link Angular Velocity vs. Crank Angle"]},...
                        'linkAngAccel', {["Crank Angle (degrees)",...
                                          "Angular Acceleration (rad/s^2)",...
                                          "Link Angular Acceleration vs. Crank Angle"]},...
                        'dynamicForce', {["Crank Angle (degrees)",...
                                          "Force (N)",...
                                          "Dynamic Force at Link COM vs. Crank Angle"]},...
                        'dynamicTorque', {["Crank Angle (degrees)",...
                                           "Torque (N\cdot m^2)",...
                                           "Dynamic Torque on Crank vs. Crank Angle"]}...
                        );
    % 'accel', {},...
    % 'staticForce', {},...
    % 'staticTorque', {},...
    % Set up figures
    plots = struct('jointLinPos', {},...
                   'jointLinVelX', {},...
                   'jointLinVelY', {},...
                   'linkAngVel', {},...
                   'linkAngAccel', {}...
                  );
    % 'jointLinAccel', {},...
    % 'accel', {},...
    % 'staticForce', {},...
    % 'staticTorque', {},...
    % 'dynamicForce', {},...
    % 'dynamicTorque', {},...
    % plots = struct('jointPos', {},...
    %                'jointVel', {})
    plotNames = fieldnames(plots);
    plots = struct();

    for i = 1:numel(plotNames)
        fieldName = plotNames{i};
        figure('Name', fieldName);
        plots.(fieldName) = axes;
        hold(plots.(fieldName), 'on')
        if (fieldName ~= "linkAngAccel") | (fieldName ~= "linkAngVelX") | (fieldName ~= "linkAngVelY")
            axis(plots.(fieldName), 'equal')
        end
        if (fieldName == "linkAngVelX") | (fieldName == "linkAngVelY") |...
                (fieldName == "jointLinVelX") | (fieldName == "jointLinVelX")
            axis(plots.(fieldName), 'tight')
        end

        xlabel(plots.(fieldName), plotLabels.(fieldName)(1))
        ylabel(plots.(fieldName), plotLabels.(fieldName)(2))
        title(plots.(fieldName), plotLabels.(fieldName)(3))
        if (fieldName ~= "jointLinPos")
            daspect(plots.(fieldName), [30, 1, 1])
        end
    end
end
